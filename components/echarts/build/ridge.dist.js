(()=>{"use strict";var e={d:(t,a)=>{for(var s in a)e.o(a,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:a[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{barBase:()=>s,barRace:()=>n,geomap:()=>i,lineBase:()=>o});const a=class{constructor(e){this.props=e||{}}getChartOptions(){}mount(e){const{echarts:t,ResizeObserver:a}=window;this.el=e,new a((e=>{for(const t of e)this.chartInstance&&this.chartInstance.resize()})).observe(this.el),t||console.log("no echarts loaded"),this.chartInstance=t.init(this.el),this.preload?this.preload().then((()=>{this.update()})):this.update()}update(e){if(e&&(this.props=e),this.chartInstance){const e=this.getChartOptions();this.props.legend?e.legend={show:!0}:e.legend={show:!1},e.xAxis&&(e.xAxis.axisLabel={interval:0}),this.chartInstance.setOption(e)}this.props.loading?this.chartInstance.showLoading():this.chartInstance.hideLoading()}},s={name:"BaseBarChart",title:"基础柱状图",component:class extends a{getChartOptions(){const{chartData:e}=this.props;return{xAxis:{type:"category",data:e.categories},yAxis:{type:"value"},series:(e.series||[]).map((e=>({type:"bar",data:e.data,smooth:!0,name:e.name})))}}},icon:"icons/CarbonChartColumn.svg",type:"vanilla",props:[{name:"chartData",label:"数据",bindable:!0,type:"SeriesData",value:{}},{name:"legend",label:"图例",width:"50%",type:"boolean",value:!1}],events:[],width:540,height:480},n={name:"BarRaceChart",title:"条形图",component:class extends a{getChartOptions(){const{chartData:e,stack:t}=this.props;return{yAxis:{type:"category",data:e.categories},xAxis:{type:"value"},series:(e.series||[]).map((e=>{const a={type:"bar",data:e.data,name:e.name};return a.stack=t?"total":null,a}))}}},icon:"icons/ChartBar.svg",type:"vanilla",props:[{name:"chartData",label:"数据",bindable:!0,type:"SeriesData",value:{}},{name:"legend",label:"图例",width:"50%",type:"boolean",value:!1},{name:"stack",label:"堆叠",width:"50%",type:"boolean",value:!1}],events:[],width:540,height:480},{echarts:r}=window,i={name:"GeoMapChart",title:"地图",component:class extends a{async preload(){if(this.props.geourl){const e=await fetch(this.props.geourl),t=await e.json();if(r.registerMap(this.props.geourl,t),t.features){const e=t.features.map((e=>"Feature"===e.type&&e.properties&&e.properties.name?e.properties.name:null)).filter((e=>e));this.props.featureReady&&this.props.featureReady(e)}}}getChartOptions(){const{seriesData:e}=this.props,t=[];return this.props.geourl&&t.push({name:"Map",type:"map",roam:!0,map:this.props.geourl??null,label:{show:!0},emphasis:{label:{show:!0}},data:e}),{tooltip:{trigger:"item",showDelay:0,transitionDuration:.2},visualMap:{disabled:!0,min:0,max:100,realtime:!1,show:!1,calculable:!1,inRange:{color:["lightskyblue","yellow","orangered"]}},series:t}}},icon:"icons/LineiconsMap.svg",type:"vanilla",props:[{name:"seriesData",label:"数据",connect:!0,type:"json",value:[]},{name:"geourl",label:"地理JSON文件",type:"file"}],events:[{name:"featureReady",label:"区域读取"}],width:540,height:480},o={name:"BaseLineChart",title:"基础线图",component:class extends a{getChartOptions(){const{chartData:e}=this.props;return{xAxis:{type:"category",data:e.categories},yAxis:{type:"value"},series:(e.series||[]).map((e=>({type:"line",data:e.data,smooth:!0,name:e.name})))}}},icon:"icons/CiChartLine.svg",type:"vanilla",props:[{name:"chartData",label:"数据",bindable:!0,type:"SeriesData",value:{}},{name:"legend",label:"图例",width:"50%",type:"boolean",value:!1}],events:[],width:540,height:480};this["ridge-echarts"]=t})();